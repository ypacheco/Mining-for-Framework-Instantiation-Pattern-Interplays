digraph {
baseInfo[graphId=1671,category="pattern",isAnonymous=false,possibleRelation=false]
frameworkRelatedTypesInfo[0="gwt.g3d.client.shader.BasicShader3D"]
possibleCollaborationsInfo[]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="pkamenarsky-ocean~/pkamenarsky-ocean/ocean-master/src/com/eleven/client/gl/WaterShader.java~WaterShader~4302",1="pkamenarsky-ocean~/pkamenarsky-ocean/ocean-master/src/com/eleven/client/gl/SkyboxShader.java~SkyboxShader~4304"]
1[label="gwt.g3d.client.shader.BasicShader3D",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
0[label="CLIENT",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
2[label="void setModelViewMatrix(javax.vecmath.Matrix4f)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
3[label="VAR:gwt.g3d.client.gl2.GL2",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
7[label="uniformMatrix()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
4[label="uniformMatrix()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
12[label="int getAttributePosition()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
5[label="gwt.g3d.client.gl2.GL2",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
9[label="VAR:gwt.g3d.client.gl2.GL2",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
10[label="uniformMatrix()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
8[label="void setProjectionMatrix(javax.vecmath.Matrix4f)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
3->7[label="CALL"]
3->5[label="OF_TYPE"]
8->9[label="INSTANTIATE"]
0->8[label="OVERRIDE"]
3->4[label="CALL"]
0->1[label="EXTEND",color=red]
2->3[label="INSTANTIATE"]
0->12[label="OVERRIDE"]
9->5[label="OF_TYPE"]
9->10[label="CALL"]
0->2[label="OVERRIDE"]
}
