digraph {
baseInfo[graphId=3359,category="pattern",isAnonymous=true,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.event.EventHandler"]
possibleCollaborationsInfo[]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="Daniel-Cristian-MusicPlayerStuff~/Daniel-Cristian-MusicPlayerStuff/MusicPlayerStuff-master/src/Controllers/LoginController.java~void login(javafx.event.ActionEvent)~311",1="NukeName-MazeFramework~/NukeName-MazeFramework/MazeFramework-master/MazeFramework/src/mazeframework/MazeFramework.java~void benchmark()~1036"]
5[label="PARAMETER:javafx.concurrent.WorkerStateEvent",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
6[label="javafx.concurrent.WorkerStateEvent",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
4[label="void handle(javafx.concurrent.WorkerStateEvent)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0[label="ANONYMOUS",vertexType="ROOT_ANONYMOUS_DECLARATION",isFrameworkType=false,color=red]
2[label="METHOD_CALL",vertexType="OUTSIDE_CALL",isFrameworkType=false]
10[label="VAR:javafx.stage.Stage",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
12[label="javafx.stage.Stage",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
11[label="show()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
13[label="VAR:javafx.concurrent.Worker",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
1[label="javafx.event.EventHandler",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
15[label="javafx.concurrent.Worker",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
17[label="getSource()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
0->4[label="OVERRIDE"]
10->12[label="OF_TYPE"]
4->10[label="INSTANTIATE"]
0->1[label="IMPLEMENT",color=red]
10->11[label="CALL"]
13->15[label="OF_TYPE"]
5->6[label="OF_TYPE"]
4->13[label="INSTANTIATE"]
4->5[label="PARAMETER"]
5->17[label="CALL"]
2->0[label="ARGUMENT"]
}
