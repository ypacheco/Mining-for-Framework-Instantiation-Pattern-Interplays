digraph {
baseInfo[graphId=2842,category="pattern",isAnonymous=true,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.event.EventHandler"]
possibleCollaborationsInfo[]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="NukeName-MazeFramework~/NukeName-MazeFramework/MazeFramework-master/MazeFramework/src/mazeframework/MazeFramework.java~void benchmark()~1035"]
6[label="javafx.concurrent.WorkerStateEvent",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
5[label="PARAMETER:javafx.concurrent.WorkerStateEvent",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
4[label="void handle(javafx.concurrent.WorkerStateEvent)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
7[label="VAR:javafx.stage.Window",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
0[label="ANONYMOUS",vertexType="ROOT_ANONYMOUS_DECLARATION",isFrameworkType=false,color=red]
2[label="METHOD_CALL",vertexType="OUTSIDE_CALL",isFrameworkType=false]
9[label="javafx.stage.Window",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
3[label="javafx.concurrent.Task",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
10[label="VAR:javafx.concurrent.Worker",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
12[label="javafx.concurrent.Worker",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
1[label="javafx.event.EventHandler",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
8[label="hide()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
14[label="getSource()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
0->1[label="IMPLEMENT",color=red]
5->14[label="CALL"]
7->9[label="OF_TYPE"]
5->6[label="OF_TYPE"]
7->8[label="CALL"]
0->4[label="OVERRIDE"]
4->10[label="INSTANTIATE"]
10->12[label="OF_TYPE"]
2->0[label="ARGUMENT"]
2->3[label="OF_TYPE"]
4->7[label="INSTANTIATE"]
4->5[label="PARAMETER"]
}
