digraph {
baseInfo[graphId=3254,category="pattern",isAnonymous=false,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.concurrent.Task"]
possibleCollaborationsInfo[]
patternInfo[frequency=3.0,patternRootClient=0]
patternInstancesInfo[0="wwtg99-POMA~/wwtg99-POMA/POMA-master/src/cn/edu/suda/core/AnalysisTask.java~AnalysisTask~4793",1="wwtg99-POMA~/wwtg99-POMA/POMA-master/src/cn/edu/suda/core/TestTask.java~TestTask~4796",2="wwtg99-POMA~/wwtg99-POMA/POMA-master/src/cn/edu/suda/core/ProcessTask.java~ProcessTask~4794"]
2[label="java.lang.Integer call()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0[label="CLIENT",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
3[label="VAR:javafx.concurrent.Task",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
4[label="updateMessage()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
7[label="updateMessage()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
9[label="updateMessage()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
1[label="javafx.concurrent.Task",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
0->1[label="EXTEND",color=red]
2->3[label="INSTANTIATE"]
3->1[label="OF_TYPE"]
3->4[label="CALL"]
3->9[label="CALL"]
0->2[label="OVERRIDE"]
3->7[label="CALL"]
}
