digraph {
baseInfo[graphId=3417,category="pattern",isAnonymous=false,possibleRelation=true]
frameworkRelatedTypesInfo[0="javafx.concurrent.Service"]
possibleCollaborationsInfo[0="3417~INSTANTIATION-OVERRIDING_METHOD_DECLARATION-~javafx.concurrent.Service ~javafx.concurrent.Task ~false~true"]
patternInfo[frequency=4.0,patternRootClient=0]
patternInstancesInfo[0="Daniel-Cristian-MusicPlayerStuff~/Daniel-Cristian-MusicPlayerStuff/MusicPlayerStuff-master/src/Controllers/LoginController.java~LoginService~312",1="miamidade-spook-detector~/miamidade-spook-detector/spook-detector-master/src/gov/miamidade/spook/MotionDetectorService.java~MotionDetectorService~3631",2="hock323-eventManager~/hock323-eventManager/EventManager-master/src/eventManager/model/pokerTournament/LevelTimeService.java~LevelTimeService~3053",3="cyberaka-fxddp_poc~/cyberaka-fxddp_poc/fxddp_poc-master/fxddp-gui/src/main/java/com/cyberaka/fxddp/gui/RabbitsApplication.java~MeteorService~2329"]
7[label="javafx.concurrent.Task createTask()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0[label="CLIENT",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
10[label="VAR:ANONYMOUS",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
11[label="ANONYMOUS",vertexType="REFERENCE_ANONYMOUS_DECLARATION",isFrameworkType=false,color=blue]
9[label="new Task()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
1[label="javafx.concurrent.Service",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
8[label="javafx.concurrent.Task",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
0->7[label="OVERRIDE"]
0->1[label="EXTEND",color=red]
7->8[label="RETURN"]
10->11[label="OF_TYPE"]
10->9[label="CALL"]
11->8[label="EXTEND",color=blue]
7->10[label="INSTANTIATE"]
}
