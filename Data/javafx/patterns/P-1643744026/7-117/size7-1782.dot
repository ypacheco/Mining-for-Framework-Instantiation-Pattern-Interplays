digraph {
baseInfo[graphId=1782,category="pattern",isAnonymous=true,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.event.EventHandler"]
possibleCollaborationsInfo[]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="syd711-mephisto_fx~/syd711-mephisto_fx/mephisto_fx-master/src/main/java/de/mephisto/radiofx/ui/controller/WeatherUIController.java~main.java.de.mephisto.radiofx.ui.controller.IRotaryControllable push()~4415",1="syd711-mephisto_fx~/syd711-mephisto_fx/mephisto_fx-master/src/main/java/de/mephisto/radiofx/ui/UIStateController.java~void updateActiveController(UIController)~4410"]
3[label="javafx.beans.value.WritableObjectValue",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
2[label="METHOD_CALL",vertexType="OUTSIDE_CALL",isFrameworkType=false]
0[label="ANONYMOUS",vertexType="ROOT_ANONYMOUS_DECLARATION",isFrameworkType=false,color=red]
4[label="void handle(javafx.event.ActionEvent)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
1[label="javafx.event.EventHandler",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
5[label="PARAMETER:javafx.event.ActionEvent",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
6[label="javafx.event.ActionEvent",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
0->4[label="OVERRIDE"]
0->1[label="IMPLEMENT",color=red]
2->3[label="OF_TYPE"]
2->0[label="ARGUMENT"]
4->5[label="PARAMETER"]
5->6[label="OF_TYPE"]
}
