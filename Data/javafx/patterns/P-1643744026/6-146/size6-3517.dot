digraph {
baseInfo[graphId=3517,category="pattern",isAnonymous=true,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.scene.control.TreeItem"]
possibleCollaborationsInfo[]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="sannies-isoviewer-fx~/sannies-isoviewer-fx/isoviewer-fx-master/src/main/java/com/googlecode/mp4parser/mp4inspector/IsoFileTreeView.java~void loadIsoFile(java.lang.String)~4072",1="sannies-isoviewer-fx~/sannies-isoviewer-fx/isoviewer-fx-master/src/main/java/Example.java~javafx.scene.control.TreeItem createNode(java.lang.String)~4067"]
4[label="super.getChildren()",vertexType="SUPER_CALL",isFrameworkType=false,shape=box]
2[label="javafx.collections.ObservableList getChildren()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0[label="ANONYMOUS",vertexType="ROOT_ANONYMOUS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.scene.control.TreeItem",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
6[label="boolean isLeaf()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
3[label="javafx.collections.ObservableList",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
2->4[label="CALL"]
0->6[label="OVERRIDE"]
0->2[label="OVERRIDE"]
2->3[label="RETURN"]
0->1[label="EXTEND",color=red]
}
