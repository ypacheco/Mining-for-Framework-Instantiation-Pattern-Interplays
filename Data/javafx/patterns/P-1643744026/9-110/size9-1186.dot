digraph {
baseInfo[graphId=1186,category="pattern",isAnonymous=true,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.beans.value.ChangeListener"]
possibleCollaborationsInfo[]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="aglassman-java-design-pattern-examples~/aglassman-java-design-pattern-examples/java-design-pattern-examples-master/design-patterns/src/main/java/designpatterns/prototype/RectControls.java~void RectControls(main.java.designpatterns.prototype.Redrawable,main.java.designpatterns.prototype.Rectangle)~1731"]
8[label="javafx.scene.paint.Color",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
7[label="PARAMETER:javafx.scene.paint.Color",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
9[label="PARAMETER:javafx.scene.paint.Color",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
4[label="void changed(javafx.beans.value.ObservableValue,javafx.scene.paint.Color,javafx.scene.paint.Color)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0[label="ANONYMOUS",vertexType="ROOT_ANONYMOUS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.beans.value.ChangeListener",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
2[label="METHOD_CALL",vertexType="OUTSIDE_CALL",isFrameworkType=false]
5[label="PARAMETER:javafx.beans.value.ObservableValue",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
3[label="javafx.beans.value.ObservableValue",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
4->9[label="PARAMETER"]
9->8[label="OF_TYPE"]
2->0[label="ARGUMENT"]
5->3[label="OF_TYPE"]
0->1[label="IMPLEMENT",color=red]
2->3[label="OF_TYPE"]
4->7[label="PARAMETER"]
0->4[label="OVERRIDE"]
4->5[label="PARAMETER"]
7->8[label="OF_TYPE"]
}
