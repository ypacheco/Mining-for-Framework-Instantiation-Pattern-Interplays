digraph {
baseInfo[graphId=2474,category="pattern",isAnonymous=false,possibleRelation=true]
frameworkRelatedTypesInfo[0="javafx.fxml.Initializable"]
possibleCollaborationsInfo[0="2474~INSTANTIATION-CLIENT_METHOD_DECLARATION-~javafx.fxml.Initializable ~javafx.event.EventHandler ~false~true"]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="7thwheel-medaka-chan~/7thwheel-medaka-chan/medaka-chan-master/src/seventhwheel/pos/controller/SuppliersController.java~SuppliersController~23",1="ajithkp560-quizmaster~/ajithkp560-quizmaster/quizmaster-master/QuizProgram_SRC/QuizProgram/src/quizprogram/SampleController.java~SampleController~1753"]
32[label="FIELD:javafx.scene.Node",vertexType="FIELD_DECLARATION",isFrameworkType=false,shape=circle]
0[label="CLIENT",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
40[label="FIELD:javafx.scene.control.Button",vertexType="FIELD_DECLARATION",isFrameworkType=false,shape=circle]
14[label="FIELD:javafx.scene.control.Button",vertexType="FIELD_DECLARATION",isFrameworkType=false,shape=circle]
1[label="javafx.fxml.Initializable",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
50[label="void initialize(java.net.URL,java.util.ResourceBundle)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
105[label="METHOD_DECLARATION",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
153[label="VAR:javafx.animation.ParallelTransition",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
152[label="new ParallelTransition()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
106[label="PARAMETER:javafx.event.ActionEvent",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
107[label="javafx.event.ActionEvent",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
114[label="VAR:javafx.util.Duration",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
13[label="javafx.scene.control.Button",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
33[label="javafx.scene.Node",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
116[label="javafx.util.Duration",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
131[label="VAR:javafx.scene.Node",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
147[label="VAR:javafx.scene.Node",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
128[label="VAR:ANONYMOUS",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
129[label="ANONYMOUS",vertexType="REFERENCE_ANONYMOUS_DECLARATION",isFrameworkType=false,color=blue]
127[label="new EventHandler()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
130[label="javafx.event.EventHandler",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=false]
154[label="javafx.animation.ParallelTransition",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
32->33[label="OF_TYPE"]
0->32[label="DECLARE_FIELD"]
0->1[label="IMPLEMENT",color=red]
106->107[label="OF_TYPE"]
0->40[label="DECLARE_FIELD"]
128->129[label="OF_TYPE"]
105->147[label="INSTANTIATE"]
128->127[label="CALL"]
105->114[label="INSTANTIATE"]
0->50[label="OVERRIDE"]
105->153[label="INSTANTIATE"]
0->105[label="DECLARE_METHOD"]
105->106[label="PARAMETER"]
40->13[label="OF_TYPE"]
153->154[label="OF_TYPE"]
153->152[label="CALL"]
114->116[label="OF_TYPE"]
0->14[label="DECLARE_FIELD"]
105->131[label="INSTANTIATE"]
131->33[label="OF_TYPE"]
129->130[label="IMPLEMENT",color=blue]
105->128[label="INSTANTIATE"]
14->13[label="OF_TYPE"]
147->33[label="OF_TYPE"]
}
