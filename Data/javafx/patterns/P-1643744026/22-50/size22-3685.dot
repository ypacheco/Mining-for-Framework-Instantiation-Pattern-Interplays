digraph {
baseInfo[graphId=3685,category="pattern",isAnonymous=false,possibleRelation=false]
frameworkRelatedTypesInfo[]
possibleCollaborationsInfo[]
patternInfo[frequency=2.0,patternRootClient=0]
patternInstancesInfo[0="LichuanLu-ShunUI-FX~/LichuanLu-ShunUI-FX/ShunUI-FX-master/src/view/chart/StackedBarChart.java~StackedBarChart~811",1="TomaszKorecki-InvestorAssistant~/TomaszKorecki-InvestorAssistant/InvestorAssistant-master/Investor's assistant/src/investor/charts/CandleChart.java~CandleStickChart~1473"]
310[label="javafx.scene.shape.MoveTo",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
319[label="VAR:javafx.scene.shape.MoveTo",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
318[label="new MoveTo()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
206[label="void layoutPlotChildren()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0[label="CLIENT",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
223[label="VAR:javafx.scene.shape.Path",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
12[label="void dataItemAdded(javafx.scene.chart.XYChart.Series,int,javafx.scene.chart.XYChart.Data)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
13[label="PARAMETER:javafx.scene.chart.XYChart.Series",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
77[label="void seriesAdded(javafx.scene.chart.XYChart.Series,int)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
78[label="PARAMETER:javafx.scene.chart.XYChart.Series",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
83[label="getData()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
81[label="getData()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
29[label="void dataItemRemoved(javafx.scene.chart.XYChart.Data,javafx.scene.chart.XYChart.Series)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
32[label="PARAMETER:javafx.scene.chart.XYChart.Series",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
97[label="javafx.scene.shape.Path",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
30[label="PARAMETER:javafx.scene.chart.XYChart.Data",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
314[label="VAR:javafx.scene.shape.LineTo",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
313[label="new LineTo()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
315[label="javafx.scene.shape.LineTo",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=false]
15[label="PARAMETER:javafx.scene.chart.XYChart.Data",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
317[label="getElements()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
312[label="getElements()",vertexType="INSIDE_CALL",isFrameworkType=false,shape=box]
206->319[label="INSTANTIATE"]
12->13[label="PARAMETER"]
78->83[label="CALL"]
206->314[label="INSTANTIATE"]
206->223[label="INSTANTIATE"]
12->15[label="PARAMETER"]
314->313[label="CALL"]
29->32[label="PARAMETER"]
0->77[label="OVERRIDE"]
223->312[label="CALL"]
77->78[label="PARAMETER"]
319->318[label="CALL"]
0->12[label="OVERRIDE"]
78->81[label="CALL"]
319->310[label="OF_TYPE"]
223->317[label="CALL"]
0->29[label="OVERRIDE"]
314->315[label="OF_TYPE"]
0->206[label="OVERRIDE"]
223->97[label="OF_TYPE"]
29->30[label="PARAMETER"]
}
