digraph {
baseInfo[graphId=662,category="extension_graph",isAnonymous=true,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.concurrent.Task"]
possibleCollaborationsInfo[]
locationInfo[projectName="Johnmalc-JavaFX",filePath="/Johnmalc-JavaFX/JavaFX-master/src/james/Minimal.java",contextSignature="void start(javafx.stage.Stage)",graphId="662"]
0[label="ROOT_ANONYMOUS_DECLARATION",vertexType="ROOT_ANONYMOUS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.concurrent.Task",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
2[label="task",vertexType="OUTSIDE_VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2]
4[label="java.lang.Void call()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
5[label="Platform",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
7[label="javafx.application.Platform",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
6[label="runLater()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
8[label="progress",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
10[label="javafx.scene.control.ProgressIndicator",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
9[label="setProgress()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
0->1[label="EXTEND",color=red]
0->2[label="ASSIGMENT"]
2->1[label="OF_TYPE"]
0->4[label="OVERRIDE"]
4->5[label="INSTANTIATE"]
5->7[label="OF_TYPE"]
5->6[label="CALL"]
4->8[label="INSTANTIATE"]
8->10[label="OF_TYPE"]
8->9[label="CALL"]
}
