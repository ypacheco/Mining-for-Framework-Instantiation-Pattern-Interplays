digraph {
baseInfo[graphId=1829,category="extension_graph",isAnonymous=false,possibleRelation=true]
frameworkRelatedTypesInfo[0="javafx.scene.control.ScrollPane"]
possibleCollaborationsInfo[0="1829~~javafx.scene.control.ScrollPane ~javafx.application.Application ~false~false"]
locationInfo[projectName="amonker-AmonkerFX",filePath="/amonker-AmonkerFX/AmonkerFX-master/src/cn/jingyun/javafx/amonker/ui/MultiPageTableListPane.java",contextSignature="MultiPageTableListPane",graphId="1829"]
0[label="cn.jingyun.javafx.amonker.ui.MultiPageTableListPane",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.scene.control.ScrollPane",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
2[label="vbox",vertexType="FIELD_DECLARATION",isFrameworkType=true,peripheries=2,shape=circle]
3[label="javafx.scene.layout.VBox",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
21[label="void willPushPage(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
22[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
23[label="cn.jingyun.javafx.amonker.ui.AmonkerUIApplication",vertexType="REFERENCE_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=blue]
24[label="javafx.application.Application",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
25[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
27[label="javafx.scene.layout.Pane",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
26[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
28[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
30[label="javafx.scene.control.TitledPane",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
29[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
32[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
33[label="void didPushPage(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
34[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
36[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
37[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
39[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
40[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
43[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
44[label="void didReBackTop(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication,cn.jingyun.javafx.amonker.ui.AmonkerUIPage)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
45[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
47[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
48[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
50[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
51[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
54[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
55[label="void willPopPage(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
56[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
58[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
59[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
61[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
62[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
65[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
66[label="void didPopPage(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
67[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
69[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
70[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
72[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
73[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
76[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
77[label="void willExitApplication(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
78[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
80[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
81[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
83[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
84[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
87[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
88[label="void didExitApplication(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
89[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
91[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
92[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
94[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
95[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
98[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
99[label="void willMinimizeWindow(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
100[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
102[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
103[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
105[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
106[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
109[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
110[label="void didMinimizeWindow(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
111[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
113[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
114[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
116[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
117[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
120[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
121[label="void willMaximizeWindow(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
122[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
124[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
125[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
127[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
128[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
131[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
132[label="void didMaximizeWindow(cn.jingyun.javafx.amonker.ui.AmonkerUIApplication)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
133[label="app",vertexType="PARAMETER_DECLARATION",isFrameworkType=false]
135[label="vbox",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
136[label="getChildren()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
138[label="tp",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
139[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
142[label="getContent()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
0->1[label="EXTEND",color=red]
0->2[label="DECLARE_FIELD"]
2->3[label="OF_TYPE"]
0->21[label="DECLARE_METHOD"]
23->24[label="EXTEND",color=blue]
22->23[label="OF_TYPE"]
21->22[label="PARAMETER"]
21->25[label="INSTANTIATE"]
25->27[label="OF_TYPE"]
25->26[label="CALL"]
21->28[label="INSTANTIATE"]
28->30[label="OF_TYPE"]
28->29[label="CALL"]
28->32[label="CALL"]
0->33[label="DECLARE_METHOD"]
34->23[label="OF_TYPE"]
33->34[label="PARAMETER"]
33->36[label="INSTANTIATE"]
36->27[label="OF_TYPE"]
36->37[label="CALL"]
33->39[label="INSTANTIATE"]
39->30[label="OF_TYPE"]
39->40[label="CALL"]
39->43[label="CALL"]
0->44[label="DECLARE_METHOD"]
45->23[label="OF_TYPE"]
44->45[label="PARAMETER"]
44->47[label="INSTANTIATE"]
47->27[label="OF_TYPE"]
47->48[label="CALL"]
44->50[label="INSTANTIATE"]
50->30[label="OF_TYPE"]
50->51[label="CALL"]
50->54[label="CALL"]
0->55[label="DECLARE_METHOD"]
56->23[label="OF_TYPE"]
55->56[label="PARAMETER"]
55->58[label="INSTANTIATE"]
58->27[label="OF_TYPE"]
58->59[label="CALL"]
55->61[label="INSTANTIATE"]
61->30[label="OF_TYPE"]
61->62[label="CALL"]
61->65[label="CALL"]
0->66[label="DECLARE_METHOD"]
67->23[label="OF_TYPE"]
66->67[label="PARAMETER"]
66->69[label="INSTANTIATE"]
69->27[label="OF_TYPE"]
69->70[label="CALL"]
66->72[label="INSTANTIATE"]
72->30[label="OF_TYPE"]
72->73[label="CALL"]
72->76[label="CALL"]
0->77[label="DECLARE_METHOD"]
78->23[label="OF_TYPE"]
77->78[label="PARAMETER"]
77->80[label="INSTANTIATE"]
80->27[label="OF_TYPE"]
80->81[label="CALL"]
77->83[label="INSTANTIATE"]
83->30[label="OF_TYPE"]
83->84[label="CALL"]
83->87[label="CALL"]
0->88[label="DECLARE_METHOD"]
89->23[label="OF_TYPE"]
88->89[label="PARAMETER"]
88->91[label="INSTANTIATE"]
91->27[label="OF_TYPE"]
91->92[label="CALL"]
88->94[label="INSTANTIATE"]
94->30[label="OF_TYPE"]
94->95[label="CALL"]
94->98[label="CALL"]
0->99[label="DECLARE_METHOD"]
100->23[label="OF_TYPE"]
99->100[label="PARAMETER"]
99->102[label="INSTANTIATE"]
102->27[label="OF_TYPE"]
102->103[label="CALL"]
99->105[label="INSTANTIATE"]
105->30[label="OF_TYPE"]
105->106[label="CALL"]
105->109[label="CALL"]
0->110[label="DECLARE_METHOD"]
111->23[label="OF_TYPE"]
110->111[label="PARAMETER"]
110->113[label="INSTANTIATE"]
113->27[label="OF_TYPE"]
113->114[label="CALL"]
110->116[label="INSTANTIATE"]
116->30[label="OF_TYPE"]
116->117[label="CALL"]
116->120[label="CALL"]
0->121[label="DECLARE_METHOD"]
122->23[label="OF_TYPE"]
121->122[label="PARAMETER"]
121->124[label="INSTANTIATE"]
124->27[label="OF_TYPE"]
124->125[label="CALL"]
121->127[label="INSTANTIATE"]
127->30[label="OF_TYPE"]
127->128[label="CALL"]
127->131[label="CALL"]
0->132[label="DECLARE_METHOD"]
133->23[label="OF_TYPE"]
132->133[label="PARAMETER"]
132->135[label="INSTANTIATE"]
135->27[label="OF_TYPE"]
135->136[label="CALL"]
132->138[label="INSTANTIATE"]
138->30[label="OF_TYPE"]
138->139[label="CALL"]
138->142[label="CALL"]
}
