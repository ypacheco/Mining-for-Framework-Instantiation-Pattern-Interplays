digraph {
baseInfo[graphId=2472,category="extension_graph",isAnonymous=false,possibleRelation=true]
frameworkRelatedTypesInfo[0="javafx.beans.value.ObservableValue"]
possibleCollaborationsInfo[0="2472~CLIENT_METHOD_DECLARATION-INSTANTIATION-CLIENT_METHOD_DECLARATION-INSTANTIATION-CLIENT_METHOD_DECLARATION-INSTANTIATION-CLIENT_METHOD_DECLARATION-INSTANTIATION-~javafx.beans.value.ObservableValue ~javafx.beans.value.ObservableValueBase javafx.beans.value.ObservableValue javafx.beans.value.ObservableValue javafx.beans.value.ObservableValue ~false~false",1="2472~CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-CLIENT_METHOD_DECLARATION-RETURN_TYPE-~javafx.beans.value.ObservableValue ~javafx.beans.value.ObservableValueBase javafx.beans.value.ObservableValue javafx.beans.value.ObservableValue javafx.beans.value.ObservableValue ~false~false",2="2472~CLIENT_METHOD_DECLARATION-INSTANTIATION-~javafx.beans.value.ObservableValue ~javafx.beans.value.ObservableValueBase javafx.beans.value.ObservableValue javafx.beans.value.ObservableValue javafx.beans.value.ObservableValue ~false~false"]
locationInfo[projectName="dimituri-milk",filePath="/dimituri-milk/milk-master/milk-core/src/main/java/lv/dimituri/milk/core/Filters.java",contextSignature="Filters",graphId="2472"]
0[label="main.java.lv.dimituri.milk.core.Filters",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.beans.value.ObservableValue",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=true,peripheries=2]
2[label="main.java.lv.dimituri.milk.core.Signal filter(javafx.beans.value.ObservableValue,java.util.function.Predicate)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
3[label="main.java.lv.dimituri.milk.core.Signal",vertexType="REFERENCE_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=blue]
4[label="javafx.beans.value.ObservableValueBase",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
8[label="observable",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
11[label="VAR0",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
12[label="main.java.lv.dimituri.milk.core.AtomicSignal",vertexType="REFERENCE_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=blue]
10[label="new AtomicSignal()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
18[label="getValue()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
19[label="main.java.lv.dimituri.milk.core.Signal filter(javafx.beans.value.ObservableValue,java.lang.Object,java.util.function.Predicate)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
21[label="observable",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
24[label="VAR2",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
23[label="new AtomicSignal()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
26[label="main.java.lv.dimituri.milk.core.Signal filter(javafx.beans.value.ObservableValue,java.lang.Object,javafx.beans.value.ObservableValue)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
28[label="observable",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
30[label="flag",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
33[label="VAR3",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
32[label="new AtomicSignal()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
35[label="main.java.lv.dimituri.milk.core.Signal sampleOn(javafx.beans.value.ObservableValue,javafx.beans.value.ObservableValue)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
37[label="observable",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
39[label="events",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
42[label="VAR4",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
41[label="new AtomicSignal()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
44[label="main.java.lv.dimituri.milk.core.Signal freeze(javafx.beans.value.ObservableValue)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
46[label="observable",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
49[label="VAR5",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
50[label="main.java.lv.dimituri.milk.core.ConstantSignal",vertexType="REFERENCE_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=blue]
48[label="new ConstantSignal()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
56[label="getValue()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
57[label="main.java.lv.dimituri.milk.core.Signal filter(java.lang.Object,java.util.function.Predicate)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
59[label="main.java.lv.dimituri.milk.core.Signal filter(java.lang.Object,javafx.beans.value.ObservableValue)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
61[label="flag",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
63[label="main.java.lv.dimituri.milk.core.Signal sampleOn(javafx.beans.value.ObservableValue)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
65[label="observable",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
67[label="main.java.lv.dimituri.milk.core.Signal freeze()",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0->1[label="IMPLEMENT",color=red]
0->2[label="DECLARE_METHOD"]
3->4[label="EXTEND",color=blue]
3->1[label="IMPLEMENT",color=blue]
3->1[label="IMPLEMENT",color=blue]
3->1[label="IMPLEMENT",color=blue]
2->3[label="RETURN"]
8->1[label="OF_TYPE"]
2->8[label="PARAMETER"]
2->11[label="INSTANTIATE"]
12->4[label="EXTEND",color=blue]
12->1[label="IMPLEMENT",color=blue]
12->1[label="IMPLEMENT",color=blue]
12->1[label="IMPLEMENT",color=blue]
11->12[label="OF_TYPE"]
11->10[label="CALL"]
8->18[label="CALL"]
0->19[label="DECLARE_METHOD"]
19->3[label="RETURN"]
21->1[label="OF_TYPE"]
19->21[label="PARAMETER"]
19->24[label="INSTANTIATE"]
24->12[label="OF_TYPE"]
24->23[label="CALL"]
0->26[label="DECLARE_METHOD"]
26->3[label="RETURN"]
28->1[label="OF_TYPE"]
26->28[label="PARAMETER"]
30->1[label="OF_TYPE"]
26->30[label="PARAMETER"]
26->33[label="INSTANTIATE"]
33->12[label="OF_TYPE"]
33->32[label="CALL"]
0->35[label="DECLARE_METHOD"]
35->3[label="RETURN"]
37->1[label="OF_TYPE"]
35->37[label="PARAMETER"]
39->1[label="OF_TYPE"]
35->39[label="PARAMETER"]
35->42[label="INSTANTIATE"]
42->12[label="OF_TYPE"]
42->41[label="CALL"]
0->44[label="DECLARE_METHOD"]
44->3[label="RETURN"]
46->1[label="OF_TYPE"]
44->46[label="PARAMETER"]
44->49[label="INSTANTIATE"]
50->4[label="EXTEND",color=blue]
50->1[label="IMPLEMENT",color=blue]
50->1[label="IMPLEMENT",color=blue]
50->1[label="IMPLEMENT",color=blue]
49->50[label="OF_TYPE"]
49->48[label="CALL"]
46->56[label="CALL"]
0->57[label="DECLARE_METHOD"]
57->3[label="RETURN"]
0->59[label="DECLARE_METHOD"]
59->3[label="RETURN"]
61->1[label="OF_TYPE"]
59->61[label="PARAMETER"]
0->63[label="DECLARE_METHOD"]
63->3[label="RETURN"]
65->1[label="OF_TYPE"]
63->65[label="PARAMETER"]
0->67[label="DECLARE_METHOD"]
67->3[label="RETURN"]
}
