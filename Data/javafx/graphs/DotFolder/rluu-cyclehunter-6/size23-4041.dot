digraph {
baseInfo[graphId=4041,category="extension_graph",isAnonymous=false,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.application.Application"]
possibleCollaborationsInfo[]
locationInfo[projectName="rluu-cyclehunter",filePath="/rluu-cyclehunter/cyclehunter-javafx-master/src/main/java/com/ryanluu/cyclehunter/App.java",contextSignature="App",graphId="4041"]
0[label="main.java.com.ryanluu.cyclehunter.App",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.application.Application",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
2[label="root",vertexType="FIELD_DECLARATION",isFrameworkType=true,peripheries=2,shape=circle]
3[label="javafx.scene.layout.BorderPane",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
4[label="scene",vertexType="FIELD_DECLARATION",isFrameworkType=true,peripheries=2,shape=circle]
5[label="javafx.scene.Scene",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
6[label="stage",vertexType="FIELD_DECLARATION",isFrameworkType=true,peripheries=2,shape=circle]
7[label="javafx.stage.Stage",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
8[label="void init()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
9[label="void start(javafx.stage.Stage)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
10[label="primaryStage",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
13[label="setTitle()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
15[label="label",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
16[label="javafx.scene.control.Label",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
14[label="new Label()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=true,peripheries=2]
18[label="root",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
17[label="new BorderPane()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=true,peripheries=2]
21[label="setLeft()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
23[label="scene",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
22[label="new Scene()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=true,peripheries=2]
26[label="setScene()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
28[label="show()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
29[label="void stop()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
0->1[label="EXTEND",color=red]
0->2[label="DECLARE_FIELD"]
2->3[label="OF_TYPE"]
0->4[label="DECLARE_FIELD"]
4->5[label="OF_TYPE"]
0->6[label="DECLARE_FIELD"]
6->7[label="OF_TYPE"]
0->8[label="OVERRIDE"]
0->9[label="OVERRIDE"]
10->7[label="OF_TYPE"]
9->10[label="PARAMETER"]
10->13[label="CALL"]
9->15[label="INSTANTIATE"]
15->16[label="OF_TYPE"]
15->14[label="CALL"]
9->18[label="INSTANTIATE"]
2->18[label="REFERENCE"]
18->3[label="OF_TYPE"]
18->17[label="CALL"]
18->21[label="CALL"]
9->23[label="INSTANTIATE"]
4->23[label="REFERENCE"]
23->5[label="OF_TYPE"]
23->22[label="CALL"]
10->26[label="CALL"]
10->28[label="CALL"]
0->29[label="OVERRIDE"]
}
