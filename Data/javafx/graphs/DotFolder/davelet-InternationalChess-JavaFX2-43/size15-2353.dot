digraph {
baseInfo[graphId=2353,category="extension_graph",isAnonymous=true,possibleRelation=true]
frameworkRelatedTypesInfo[0="javafx.event.EventHandler"]
possibleCollaborationsInfo[0="2353~OVERRIDING_METHOD_DECLARATION-INSTANTIATION-~javafx.event.EventHandler ~javafx.event.ActionEvent ~true~false"]
locationInfo[projectName="davelet-InternationalChess-JavaFX2",filePath="/davelet-InternationalChess-JavaFX2/InternationalChess-JavaFX2-master/src/cn/davelet/internationalchess/InternationalChess.java",contextSignature="void start(javafx.stage.Stage)",graphId="2353"]
0[label="ROOT_ANONYMOUS_DECLARATION",vertexType="ROOT_ANONYMOUS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.event.EventHandler",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=true,peripheries=2]
2[label="void addEventHandler(javafx.event.EventType,javafx.event.EventHandler)",vertexType="OUTSIDE_CALL",isFrameworkType=true,peripheries=2]
3[label="javafx.scene.Node",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
4[label="void handle(javafx.scene.input.MouseEvent)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
5[label="t",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
6[label="javafx.scene.input.MouseEvent",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
7[label="GridPane",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
9[label="javafx.scene.layout.GridPane",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
8[label="getColumnIndex()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
11[label="getRowIndex()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
13[label="pa",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
14[label="cn.davelet.internationalchess.PieceAcitons",vertexType="REFERENCE_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=blue]
15[label="javafx.event.ActionEvent",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
12[label="new PieceAcitons()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
0->1[label="IMPLEMENT",color=red]
2->0[label="ARGUMENT"]
2->3[label="OF_TYPE"]
0->4[label="OVERRIDE"]
5->6[label="OF_TYPE"]
4->5[label="PARAMETER"]
4->7[label="INSTANTIATE"]
7->9[label="OF_TYPE"]
7->8[label="CALL"]
7->11[label="CALL"]
4->13[label="INSTANTIATE"]
14->15[label="EXTEND",color=blue]
13->14[label="OF_TYPE"]
13->12[label="CALL"]
}
