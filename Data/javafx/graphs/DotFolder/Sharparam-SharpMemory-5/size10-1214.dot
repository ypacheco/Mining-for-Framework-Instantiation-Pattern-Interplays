digraph {
baseInfo[graphId=1214,category="extension_graph",isAnonymous=false,possibleRelation=false]
frameworkRelatedTypesInfo[0="javafx.application.Application"]
possibleCollaborationsInfo[]
locationInfo[projectName="Sharparam-SharpMemory",filePath="/Sharparam-SharpMemory/SharpMemory-master/src/main/java/com/sharparam/sharpmemory/SharpMemory.java",contextSignature="SharpMemory",graphId="1214"]
0[label="main.java.com.sharparam.sharpmemory.SharpMemory",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.application.Application",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
2[label="stage",vertexType="FIELD_DECLARATION",isFrameworkType=true,peripheries=2,shape=circle]
3[label="javafx.stage.Stage",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
4[label="void start(javafx.stage.Stage)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
5[label="primaryStage",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
7[label="stage",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
8[label="show()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
10[label="void stop()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
11[label="super.stop()",vertexType="SUPER_CALL",isFrameworkType=true,peripheries=2,shape=box]
0->1[label="EXTEND",color=red]
0->2[label="DECLARE_FIELD"]
2->3[label="OF_TYPE"]
0->4[label="OVERRIDE"]
5->3[label="OF_TYPE"]
4->5[label="PARAMETER"]
4->7[label="INSTANTIATE"]
2->7[label="REFERENCE"]
7->3[label="OF_TYPE"]
7->8[label="CALL"]
0->10[label="OVERRIDE"]
10->11[label="CALL"]
}
