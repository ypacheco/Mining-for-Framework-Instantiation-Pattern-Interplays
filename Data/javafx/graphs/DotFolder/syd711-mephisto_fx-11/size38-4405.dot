digraph {
baseInfo[graphId=4405,category="extension_graph",isAnonymous=false,possibleRelation=true]
frameworkRelatedTypesInfo[0="javafx.application.Application"]
possibleCollaborationsInfo[0="4405~CLIENT_METHOD_DECLARATION-INSTANTIATION-~javafx.application.Application ~javafx.event.EventHandler ~false~true"]
locationInfo[projectName="syd711-mephisto_fx",filePath="/syd711-mephisto_fx/mephisto_fx-master/src/main/java/de/mephisto/radiofx/MephistoRadioFX.java",contextSignature="MephistoRadioFX",graphId="4405"]
0[label="main.java.de.mephisto.radiofx.MephistoRadioFX",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.application.Application",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
2[label="stage",vertexType="FIELD_DECLARATION",isFrameworkType=true,peripheries=2,shape=circle]
3[label="javafx.stage.Stage",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
4[label="void start(javafx.stage.Stage)",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
5[label="primaryStage",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
8[label="initStyle()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
10[label="show()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
18[label="void addStateListener(javafx.stage.Stage)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
19[label="primaryStage",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
21[label="primaryStage",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
23[label="javafx.stage.Window",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
22[label="addEventFilter()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
25[label="anonymous4",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
26[label="REFERENCE_ANONYMOUS_DECLARATION",vertexType="REFERENCE_ANONYMOUS_DECLARATION",isFrameworkType=false,color=blue]
27[label="javafx.event.EventHandler",vertexType="FRAMEWORK_INTERFACE_TYPE",isFrameworkType=true,peripheries=2]
24[label="new EventHandler()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
28[label="keyEvent",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
30[label="javafx.scene.input.KeyEvent",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
29[label="getCode()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
31[label="Platform",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
33[label="javafx.application.Platform",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
32[label="runLater()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
35[label="getCode()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
37[label="runLater()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
39[label="getCode()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
41[label="runLater()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
43[label="getCode()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
45[label="runLater()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
46[label="void addDisposeListener(javafx.stage.Stage)",vertexType="CLIENT_METHOD_DECLARATION",isFrameworkType=false,shape=box]
47[label="primaryStage",vertexType="PARAMETER_DECLARATION",isFrameworkType=true,peripheries=2]
49[label="primaryStage",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
50[label="setOnCloseRequest()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
53[label="anonymous14",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
54[label="REFERENCE_ANONYMOUS_DECLARATION",vertexType="REFERENCE_ANONYMOUS_DECLARATION",isFrameworkType=false,color=blue]
52[label="new EventHandler()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
56[label="Platform",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
57[label="exit()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
0->1[label="EXTEND",color=red]
0->2[label="DECLARE_FIELD"]
2->3[label="OF_TYPE"]
0->4[label="OVERRIDE"]
5->3[label="OF_TYPE"]
4->5[label="PARAMETER"]
5->8[label="CALL"]
5->10[label="CALL"]
0->18[label="DECLARE_METHOD"]
19->3[label="OF_TYPE"]
18->19[label="PARAMETER"]
18->21[label="INSTANTIATE"]
21->23[label="OF_TYPE"]
21->22[label="CALL"]
18->25[label="INSTANTIATE"]
26->27[label="IMPLEMENT",color=blue]
25->26[label="OF_TYPE"]
25->24[label="CALL"]
18->28[label="INSTANTIATE"]
28->30[label="OF_TYPE"]
28->29[label="CALL"]
18->31[label="INSTANTIATE"]
31->33[label="OF_TYPE"]
31->32[label="CALL"]
28->35[label="CALL"]
31->37[label="CALL"]
28->39[label="CALL"]
31->41[label="CALL"]
28->43[label="CALL"]
31->45[label="CALL"]
0->46[label="DECLARE_METHOD"]
47->3[label="OF_TYPE"]
46->47[label="PARAMETER"]
46->49[label="INSTANTIATE"]
49->23[label="OF_TYPE"]
49->50[label="CALL"]
46->53[label="INSTANTIATE"]
54->27[label="IMPLEMENT",color=blue]
53->54[label="OF_TYPE"]
53->52[label="CALL"]
46->56[label="INSTANTIATE"]
56->33[label="OF_TYPE"]
56->57[label="CALL"]
}
