digraph {
baseInfo[graphId=3053,category="extension_graph",isAnonymous=false,possibleRelation=true]
frameworkRelatedTypesInfo[0="javafx.concurrent.Service"]
possibleCollaborationsInfo[0="3053~OVERRIDING_METHOD_DECLARATION-INSTANTIATION-~javafx.concurrent.Service ~javafx.concurrent.Task ~false~true"]
locationInfo[projectName="hock323-eventManager",filePath="/hock323-eventManager/EventManager-master/src/eventManager/model/pokerTournament/LevelTimeService.java",contextSignature="LevelTimeService",graphId="3053"]
0[label="eventManager.model.pokerTournament.LevelTimeService",vertexType="ROOT_CLIENT_CLASS_DECLARATION",isFrameworkType=false,color=red]
1[label="javafx.concurrent.Service",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
2[label="timeInseconds",vertexType="FIELD_DECLARATION",isFrameworkType=true,peripheries=2,shape=circle]
3[label="javafx.beans.property.SimpleIntegerProperty",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
4[label="javafx.concurrent.Task createTask()",vertexType="OVERRIDING_METHOD_DECLARATION",isFrameworkType=false,shape=box]
5[label="javafx.concurrent.Task",vertexType="FRAMEWORK_CLASS_TYPE",isFrameworkType=true,peripheries=2]
7[label="anonymous0",vertexType="VARIABLE_EXPRESION",isFrameworkType=false,shape=circle]
8[label="REFERENCE_ANONYMOUS_DECLARATION",vertexType="REFERENCE_ANONYMOUS_DECLARATION",isFrameworkType=false,color=blue]
6[label="new Task()",vertexType="CONSTRUCTOR_CALL",isFrameworkType=false]
10[label="_:javafx.concurrent.Task",vertexType="VARIABLE_EXPRESION",isFrameworkType=true,peripheries=2,shape=circle]
11[label="updateMessage()",vertexType="INSIDE_CALL",isFrameworkType=true,peripheries=2,shape=box]
0->1[label="EXTEND",color=red]
0->2[label="DECLARE_FIELD"]
2->3[label="OF_TYPE"]
0->4[label="OVERRIDE"]
4->5[label="RETURN"]
4->7[label="INSTANTIATE"]
8->5[label="EXTEND",color=blue]
7->8[label="OF_TYPE"]
7->6[label="CALL"]
4->10[label="INSTANTIATE"]
10->5[label="OF_TYPE"]
10->11[label="CALL"]
}
